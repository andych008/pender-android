## Copyright 2012 Adobe Systems Incorporated
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
##

##
# Build script for Pender Android
#
# Lorin Beer
# lorin@adobe.com
# github.com/lorinbeer
#
##

latestandroidtarget= #holds latest android target identified 

# hold command line arguments
target=android-8
projectname=PenderClient
libname=PenderAndroidLibrary
gitclone="git clone git@github.com:lorinbeer/Pender-android.git"
name=PenderClient
path=""
activity=PenderActivity
projpackage=com.pender.client
libpackage=com.pender
libloc="../PenderAndroidLibrary"

# error messages
penderandroiderror="Pender Build Tools couldn't find any android targets\nPender depends on the Android SDK android tool accessible on the command line"
penderliblocerror="Pender Library location not specified or not found"

# create lib command silhouette
createlibcommand="android create lib-project --name Pender --target <targetid> --path <path> --package <package>"

# create project command silhouette
createcommand="android create project --target <targetid> --path <path>  --package <package>  --activity <activityid>"

# update project
updatecommand="android update project --path <path> --library <libloc>"

##
# creates an android project using the appropriate arguments substituted into the library create command
##
createclientproject() {
    latesttarget
    genpath "$projectname"
    if [ $target -gt 0 ]
      then
        echo $target
        createcmd=$(echo $createcommand | sed -e s*'<targetid>'*$target* -e s*'<path>'*$pa* -e s*'<package>'*$projpackage* -e s*'<activityid>'*$activity*) 
    	echo $createcmd
        $createcmd
      else
        echo $latestandroidtarget
    fi
}

##
# creates an android library project using the appropriate arguments substituted into the library create command
##
createlibraryproject() {
    latesttarget
    genpath "$libname"
    createcmd=$(echo $createlibcommand | sed -e  s*'<targetid>'*$target* -e s*'<path>'*$pa* -e s*'<package>'*$libpackage*)
    echo $createcmd
    $createcmd
    copysource
    copylibs
}

##
# update the client project linking it with the library
##
updateproject() {
    genpath "$projectname"
    updatecmd=$(echo $updatecommand | sed -e s*'<path>'*$pa* -e s*'<libloc>'*$libloc*)
    echo $updatecmd
    $updatecmd
}

##
# divine the latest android target code installed on the system 
##
latesttarget() {
    AndroidTargets=$(android list targets | grep -o id:.[1-9][0-9]* | sed s/id://)
    AndroidTargets=($AndroidTargets)
    latestandroidtarget=${#AndroidTargets[@]}

    # sanity test for android target
    if [ -z $latestandroidtarget ]
    then
        echo -e $penderandroiderror
    elif [ $latestandroidtarget -lt 0 ]
    then
        echo -e $penderandroiderror
    else
        target=$latestandroidtarget
        echo -e $targetid
    fi
}

##
# copy the source
##
copysource() {
    cp -r ../src $libname
}

##
# copy libs
##
copylibs() {
    cp -r ../libs $libname
}

##
# add a reference to the rhino library into the ant properties build file 
##
addrhinolibref() {
    genpath "$projectname"
    pa=$pa\/ant.properties
    cat $pa > 
}

##
# gen path
##
genpath() {
    pa="" # insure that the temp path variable is defined and cleared
    if [ -z $path]
    then
        pa=$1
    else
        pa=path\/$1        
    fi
}

##
# process command line arguments
##
while [ $# -gt 0 ]
do
    case "$1" in
        -h|--help) cat help; 
        exit;;
        -l|--library) createmode="library"
        ;;
        -c|--client) createmode="client"
        ;;
        -s|--libloc) libloc="$2"; shift
        ;;
        -t|--target) target="$2"; shift
    	;;
    	-n|--name) name="$2"; shift
    	;;
    	-p|--path) path="$2"; shift
    	;;
        -k|--package) projpackage="$2"; shift
    	;;
        -a|--activity) activity="$2"; shift
    	;;
	*) #break;;
   esac
  shift
done


##
# execute create mode
##
if [ "$createmode" == "library" ]
then
    echo "PenderTools: Creating Library Project"
    if [ -z "$path" ]
    then
        currentdirectory=pwd
        echo "PenderTools: path not specified, creating library project here" `pwd`
    fi
    createlibraryproject
elif [ "$createmode" == "client" ]
then
    echo "PenderTools: Creating Client Project"
    createlibraryproject
    createclientproject
    updateproject
else
   cat help 
fi
